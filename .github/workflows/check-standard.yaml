# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
  pull_request:
    branches: [master, develop]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          # - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          # - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install Dependencies
        run: echo "utils::chooseCRANmirror(graphics=FALSE, ind = 1)" > .Rprofile
        run: |
          Date <- as.character(read.dcf('DESCRIPTION', 'Date'));
          URL <- if(is.na(Date)) 'https://cran.rstudio.com/' else paste0('https://mran.microsoft.com/snapshot/', Date);
          Rprofile <- file('.Rprofile', open = 'wt');
          writeLines('.libPaths(Sys.getenv(\'R_LIBS_USER\'))', Rprofile);
          writeLines('require(remotes)', Rprofile);
          writeLines(paste0('options(repos = \'', URL, '\')'), Rprofile);
          close(Rprofile)
        shell: Rscript {0}
        run: |
          if(!'remotes' %in% rownames(utils::installed.packages())) utils::install.packages('remotes');
          install_cran(c('devtools'));
          update_packages();
          install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      # - name: Build Documentation
      #   env:
      #     _R_CHECK_CRAN_INCOMING_REMOTE_: false
      #   run: |
      #     devtools::document()
      #   shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v1
